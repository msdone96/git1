name: Test Workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/scraper.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write # Required for uploading SARIF results

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21.x']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Initialize Go module
        run: |
          go mod tidy
          cat go.mod
          cat go.sum

      - name: Install dependencies
        run: |
          go get github.com/PuerkitoBio/goquery@v1.8.1
          go get golang.org/x/net/html/charset@v0.19.0
          go get golang.org/x/text/encoding/htmlindex@v0.14.0
          go mod tidy

      - name: Verify module status
        run: |
          go mod verify
          go mod download

      - name: Run unit tests
        run: go test -v -race ./...

      - name: Run linter
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.54.2
          args: --timeout=5m
          skip-cache: true

      - name: Build test binary
        run: go build -v ./...

      - name: Test with sample input
        run: |
          echo "URL,Notes" > test_input.csv
          echo "https://example.com,Test site" >> test_input.csv
          ./webscraper -input=test_input.csv -timeout=5 -workers=2 || true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      security-events: write # Required for uploading SARIF results
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'

      - name: Initialize Go module
        run: go mod tidy

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -no-fail -fmt=sarif -out=results.sarif ./...

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          category: gosec
